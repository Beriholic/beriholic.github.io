[{"content":"","date":"5 October 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"5 October 2024","externalUrl":null,"permalink":"/","section":"w2h34d","summary":"","title":"w2h34d","type":"page"},{"content":" CRK 史上最逆天的 Hadoop 集群部署教程 # 如果你是对Linux完全不熟悉的小白，那么强烈建议你使用虚拟机手动部署Hadoop集群，这样你可以更好的理解Hadoop集群的部署过程，集群之间的通信等等。\n1. 背景提要 # 传统的 Hadoop 部署方式，需要在每台虚拟机上分别安装配置，步骤繁琐，配置过程中重复性工作较多，且需要手动修改配置文件，容易出现错误。\n那么对于实验环境，开发环境，我们真的需要这么生产级别的配置吗？就算是生产级别的配置，那也不会是手动配置，而是使用 k8s，mesos 等容器编排工具进行部署吧。\n在一台电脑上部署几个虚拟机跑 Hadoop Node，这不也是伪分布式吗？那么我们为什么不直接使用 docker 容器呢？\n所以，本文将介绍如何使用 docker 容器部署 Hadoop 集群，以及如何使用 docker-compose 进行编排。\nQ: 主播主播，我没脑子怎么办？\nA: :D，本教程完全可以卸载大脑！放心食用\nQ: 什么烂文档，又臭又长，我不看\nA: 第2节压缩包里面有操作的视频，看完之后，记得看3.4节\n1.1 涉及知识(不感兴趣可以直接跳过) # Docker # 老说 Docker，Docker，Docker 是个啥啊？\nDocker 容器是一个开源的应用容器引擎，让开发者可以以统一的方式打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何安装了 docker 引擎的服务器上（包括流行的 Linux 机器、windows 机器），也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。几乎没有性能开销,可以很容易地在机器和数据中心中运行。最重要的是,他们不依赖于任何语言、框架包括系统。\n特性 容器 虚拟机 启动 秒级 分钟级 磁盘占用 一般为 MB 一般为 GB 性能 接近原生 弱于原生 系统支持量 单机支持上千个容器 一般几十个 说人话就是可以理解为一台轻量级的虚拟机，直接使用实体机的一些资源，不需要像虚拟机那样需要额外的资源。\nWSL # WSL 又是什么啊?\n适用于 Linux 的 Windows 子系统 (WSL) 是 Windows 的一项功能，可用于在 Windows 计算机上运行 Linux 环境，而无需单独的虚拟机或双引导。 WSL 旨在为希望同时使用 Windows 和 Linux 的开发人员提供无缝高效的体验。\n所以都 2024 年了，想要在 Windows 下使用 linux 环境，如果没有隔离，多机的理由了，直接用 WSL 吧。\n2. 准备条件 # 下载作者准备的文件 https://www.123pan.com/s/aXrSVv-tncWd\n充足的 C 盘空间,建议至少 50G (本教程安装需要占用约 7g 容量，含docker desktop）)\nDocker 是默认安装在 C 盘的，如果 C 盘空间不足，或者你有 C 盘洁癖，请看 4.2 节\n3. 开始安装 # 3.1 安装 Docker Desktop # 单单 Docker Daemon 是没有 GUI 的，所以我们需要安装 Docker Desktop\n如果你有我打包好的文件\n直接找到，进行安装 安装完成之后\n到这里说明你已经做对了，完成教程的 80%了\n3.2 构建 Hadoop 基础镜像 # 找到我打包的文件，把它放到一个你喜欢的地方 进入文件夹\n在此地方右键 \u0026ndash;\u0026gt; 在终端打开\n看到下图显示的这样，说明你又做对了\n下面跟着敲命令\ncd ./amd64 # 根据Dockerfile构建hadoop基础镜像 docker build . -t hadoop 看到这个，说明你又对了 下面就要耐心等待了，看你的网速和电脑速度了\n如果是下面这样的话就是，大功告成了 下面跟着敲\ncd .. docker network create hadoop-network docker-compose up -d #编排docker镜像，也就是hadoop集群搭建 恭喜你，大功告成 不出意外，你就可以访问了 Hadoop 暴露的几个端口如下：\n8020 fs.defaultFS 9870 NameNode Web UI 9868 Secondary NameNode Web UI 8088 Yarn Web UI 你可以试试 127.0.0.1:9870 试试了\n3.3 配置 host # 用管理员权限打开记事本 打开 host 文件C:\\Windows\\System32\\drivers\\etc 如果列表中没有hosts文件，在此处输入hosts，点旁边那个打开 写入\n127.0.0.1 master 127.0.0.1 slave1 127.0.0.1 slave2 127.0.0.1 slave3 大功告成!!\n已经可以用master:9870/访问 master 了\n3.4 ssh 连接 # 节点 主机地址 用户名 密码 ssh端口 master master root 123456 9000 slave1 slave1 root 123456 9001 slave2 slave2 root 123456 9002 slave3 slave3 root 123456 9003 以连接 master 机器为例 如果你使用的是 xShell，主机地址，用户名，密码，端口这几个参数，填写就行\n4.常见问题 # 4.1 如何启动，暂停 # Docker Desktop 里面\n绿色就是完全启动了 黄色就是部分开启，部分关闭 灰色就是关闭 4.2 C 盘大小不足怎么办呢 # 参考\n鸣谢 # 感谢 哈工大提供的环境配置方案 本教程基于此配置方案进行修改\n","date":"9 September 2024","externalUrl":null,"permalink":"/posts/hadoop%E5%BC%80%E5%8F%91%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/","section":"Posts","summary":"","title":"hadoop开发集群部署","type":"posts"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"9 September 2024","externalUrl":null,"permalink":"/tags/%E7%BC%96%E7%A8%8B/","section":"Tags","summary":"","title":"编程","type":"tags"},{"content":"","date":"26 July 2024","externalUrl":null,"permalink":"/tags/%E5%A4%87%E5%BF%98%E5%BD%95/","section":"Tags","summary":"","title":"备忘录","type":"tags"},{"content":" 图片 # 格式转换 # ffmpeg -i [input.type] [output.type] #eg. ffmpeg -i test.jpg test.png 压缩 # 自动压缩图片 # ffmpeg -i [input] -q [compress_level] [output] #compress_level：压缩等级为正整数，数值越大压缩等级越高 #eg. ffmpeg -i test.jpg -q 10 test-res.jpg 压缩至指定的宽高 # ffmpeg -i [input] -vf scale=[width:height] [output] #width为压缩后的图片宽度，-1为保持原尺寸 #height为压缩后的图片高度，-1为保存原尺寸 视频 # 提取音频 # ffmpeg -i [input] -vn -c:a copy [output] #eg. ffmpeg -i input.mp4 -vn -c:a copy output.mp3 提取视频 # 视频提取视频？视频去掉音轨\nffmpeg -i [input] -vcodec copy -an [output] #eg. ffmpeg -i input.mp4 -vcodec copy -an input-res.mp4 截取视频中的某一帧 # ffmpeg -ss [time] -i [input] -frames:v 1 [output] #eg. ffmpeg -ss 11:45:14 -i input.mp4 -frames:v 1 output.jpg 格式转换 # ffmpeg -i [input.type] [output.type] #eg. ffmpeg -i input.mp4 output.avi 常见参数\n-c：指定编码器 -c copy：直接复制，不经过重新编码（这样比较快） -c:a：指定音频编码器 -c:v：指定视频编码器 -i：指定输入文件 -an：去除音频流 -vn： 去除视频流 -preset：指定输出的视频质量，可用的值 ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow。 -y：不经过确认，输出时直接覆盖同名文件 ","date":"26 July 2024","externalUrl":null,"permalink":"/posts/ffmpeg/","section":"Posts","summary":"","title":"备忘录 | ffmpeg","type":"posts"},{"content":"用react-navigation写东西发现小白条不沉浸 :L 要使用expo-navigation-bar来控制相关的api\n把color传入相同的颜色就可以解决了\nNavigationBar.setBackgroundColorAsync(color); 现在就舒服了 :D ","date":"12 July 2024","externalUrl":null,"permalink":"/posts/react-navigation%E5%B0%8F%E7%99%BD%E6%9D%A1%E6%B2%89%E6%B5%B8/","section":"Posts","summary":"","title":"react-navigation小白条沉浸","type":"posts"},{"content":"在看长篇文档而且需要记忆的时候，总会不自觉的去干一些不相干的事情，注意力完全不集中，包括现在明明要背的东西还没背完，我还在这里写博客\n不知道是不是期末来了摆太久了的原因\n","date":"5 July 2024","externalUrl":null,"permalink":"/posts/%E4%B8%A7%E5%A4%B1%E6%B3%A8%E6%84%8F%E5%8A%9B/","section":"Posts","summary":"","title":"丧失注意力","type":"posts"},{"content":" 背景 # 昨天晚上关电脑的时候，发现Windows有新的更新，就很平常的点了更新并关机，今天开电脑的时候，我去我 refind 怎么没有，进 biso 一看，怎么只有windows的引导了\n于是做archlinux的引导 u 盘，挂载上去一看，boot分区文件都在，也就松了一口气\n重装grub和refind就行\nsudo grub-mkconfig -o /boot/grub/grub.cfg sudo refind-install 重启什么都回来了:D\n","date":"29 June 2024","externalUrl":null,"permalink":"/posts/windows%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/","section":"Posts","summary":"","title":"Windows自动更新","type":"posts"},{"content":"三个月没滚了，居然没有滚挂 :D\n","date":"26 June 2024","externalUrl":null,"permalink":"/posts/%E6%BB%9A%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%B2%A1%E6%8C%82/","section":"Posts","summary":"","title":"滚动更新没挂","type":"posts"},{"content":" 背景 # 我的手机是华为，都知道鸿蒙系统完全没有什么可玩性，老逛酷安，就对折腾手机有种冲动，于是就买了二手战损版的一加8t，来折腾一下。\n手机到货，直接开刷 # 解锁bootloader # 装上adb，然后打开手机的开发者选项，开启usb调试，然后运行adb devices，看到设备就可以了，然后运行adb reboot bootloader进入fastboot模式，然后运行fastboot oem unlock解锁bootloader，用音量键选择unlock，然后按电源键确认，手机会重启，然后就解锁成功了。\n解锁bootloader会清空手机数据，所以提前备份好数据。\n刷入类原生系统 # 由于我对ColorOS系统不是很感冒，想试一试类原生的体验如何\n刷入底包 # 根据文档的要求 Warning: Before following these instructions please ensure that the device is currently using Android 13 firmware. 警告：在按照这些说明操作之前，请确保设备当前使用的是 Android 13 固件。 使用oxygen-updater获取氧OS13的全量包，然后刷入\n开刷 # 刷机文件\n进入bootloader\nadb reboot bootloader 刷入dtbo和vbmeta\nfastboot flash dtbo ./dtbo.img fastboot flash vbmeta ./vbmeta.img 刷入recovery\nfastboot flash recovery ./recovery.img 使用音量键进入recovery\n按文档要求确保所有固件分区一致\n“在某些情况下，非活动插槽可能未填充或包含比活动插槽旧得多的固件，从而导致各种问题，包括潜在的硬砖。我们可以通过将活动插槽的内容复制到非活动插槽来确保不会发生这些情况。”\n使用音量键，选中Apply Update\u0026mdash;\u0026gt; Apply from ADB进入\n旁载刷入 adb -d sideload ./copy-partitions-20220613-signed.zip\n完成之后，选择Advanced \u0026mdash;\u0026gt; Reboot to recovery进入\n使用音量键，选中Apply Update\u0026mdash;\u0026gt; Apply from ADB进入\n刷入lineageos系统\nadb -d sideload ./lineage-xxxxxxxx.zip 大功告成\n如果需Google Apps 还需要额外的步骤\n刷入apatch # 什么是 APatch？ 适用于 Android 设备的基于内核的 Root 新解决方案，可以工作在内核模式，并直接在内核空间中为用户空间应用程序授予 root 权限。\n刷入请看官方文档写的很详细了\n安装Apatch管理器 设置密钥，修补boot 刷入修补后的boot，验证密钥 如果刷成功了，但是给予root权限有问题，不妨看看shell给没给root权限\n刷入lsposed # 刷入 Zygisk Next Zygisk Lsposed Mod\nAndroid14 普通的Lsposed无法正常使用，需要使用mod版 上面的链接是CI里最新的版本，不知道为什么release我也用不了\n最后记得折腾以下隐藏root环境\n如果在momo中看到tee损坏，不必担心，一加在解锁bl的时候会导致tee假死，回锁bl就可以解决，但是别在这时候回锁!!!\n到这里已经可以愉快的折腾手机了 :D\n后记 # 后面陆续体验了pe系统，nameless，\n最后还是回lineage了\n不带gapp，系统干净(毛坯房)\n不过我对gapp的依赖并不强，可以是因为华为没谷歌服务，用习惯了\n后续用thanox压制后台，又刷了yc调度，墓碑，接入了hms push，差不多可以做到一天一冲 :D\n还刷了一些功能性模块，比如adGuardHome，dns层面屏蔽广告，类DC调光，指纹支付。\n原先类DC调光模块在安卓13可以跑，但是安卓14就不起作用了，后面找到了这个大佬的DC模块可以用\n不得不说lineage真的好干净 真是酣畅淋漓的刷机啊\n","date":"23 June 2024","externalUrl":null,"permalink":"/posts/%E6%89%8B%E6%9C%BA%E6%8A%98%E8%85%BE%E8%AE%A1/","section":"Posts","summary":"","title":"手机折腾计","type":"posts"},{"content":"","date":"23 June 2024","externalUrl":null,"permalink":"/tags/%E6%8A%98%E8%85%BE/","section":"Tags","summary":"","title":"折腾","type":"tags"},{"content":"早上刷抖音的时候，看到营销号在发一个中文编程的视频\n先不说不是人家正儿八经的中文编程， 代码文件后缀还是cpp，就是在头文件中先提前define而已\n中文编程大概只能存在于编程入门时期学习的语言。\n编程其实难的从来不是英语，我身边的朋友从来没有说是因为英语阻碍了程序编写，更多的还是其他方面。\n看看 Scratch 这种图形化编程，那些大佬真的是因为图形化而这么强的吗？\n在看看用易语言写外挂的大佬，也不是因为中文编程才强大的吧\n对于想体验编程乐趣的人，那么中文编程确实有亲和力，至少对关键词不太排斥。\n如果真对中文编程感兴趣，其实完全可以去尝试尝试\n","date":"22 June 2024","externalUrl":null,"permalink":"/posts/%E4%B8%AD%E6%96%87%E7%BC%96%E7%A8%8B/","section":"Posts","summary":"","title":"中文编程","type":"posts"},{"content":" 重回 Github Page # 使用服务器部署博客其实也挺不错的 (就是要钱)\n但主要是因为各种备案太麻烦了，还是白嫖Github Page做博客吧\n感谢Github\n对于以前的博文也懒得搬过来，算作一种重新开始吧，就像现在的生活一样。\n","date":"20 June 2024","externalUrl":null,"permalink":"/posts/come_back/","section":"Posts","summary":"","title":"我回来了Github Page","type":"posts"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]